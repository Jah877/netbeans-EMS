import javax.swing.table.*;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author user
 */
public class DisplayEmployee extends javax.swing.JFrame {
    // ATTRIBUTES
    
    private MyHashTable mainHT;
    private DefaultTableModel model;
    
    // CONSTRUCTORS
    /**
     * Creates new form DisplayEmployee
     */
    public DisplayEmployee() {
        initComponents();
    }
    
    // METHODS
    
    public void setMainHT (MyHashTable refvalForHT) {
        mainHT = refvalForHT;
        System.out.println("DISPLAY EMPLOYEE LIVE");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        dispEmpButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contentDispTab = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Heavy", 0, 24)); // NOI18N
        jLabel1.setText("Display Employee Menu");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, -1));

        dispEmpButton.setText("Display All Employees In System");
        dispEmpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispEmpButtonActionPerformed(evt);
            }
        });
        getContentPane().add(dispEmpButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 72, 452, -1));

        statusLabel.setText("   ");
        getContentPane().add(statusLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 106, 452, -1));

        contentDispTab.setAutoCreateColumnsFromModel(false);
        contentDispTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(contentDispTab);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 140, -1, -1));

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 520, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dispEmpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispEmpButtonActionPerformed
        int numInHT = mainHT.getNumInHashTable();
        
        // set up the column headers and also state how many rows of data to display
        model = new DefaultTableModel(new Object[] {"Status","Emp Num", "First Name", "Last Name", "Gender", "Location"}, numInHT);
        contentDispTab.setModel(model);
        contentDispTab.setAutoCreateColumnsFromModel(true);
        
        int empCounter = -1; // row position in table for the current employee
        
        statusLabel.setText("Currently this many employess in the table: " + Integer.toString(numInHT));
        System.out.println("");
        System.out.println("Number of employees in the HT is " + numInHT);
        
        if (numInHT > 0) {
            System.out.println("Here are the employees:");
            for (int i = 0; i < mainHT.buckets.length; i++) {
                for (int j = 0; j < mainHT.buckets[i].size(); j++) {
                    
                    EmployeeInfo theEmp = mainHT.buckets[i].get(j);
                    
                    empCounter++;
                    
                    System.out.println(" Employee number: " + Integer.toString(theEmp.getEmpNum()));
                    System.out.println(" First name, last name: " + theEmp.getFirstName() + " " + theEmp.getLastName());
                    
                    if (theEmp instanceof FTE) {
                        FTE theFTE = (FTE) theEmp;
                        System.out.println("    That Emploee has a gross yearly salary $" + Double.toString(theFTE.getYearlySalary()));
                        System.out.println("    That employee has a net yearly income $" + Double.toString(theFTE.calcNetAnnualIncome()));
                        
                        model.setValueAt("Full Time", empCounter, 0);
                        model.setValueAt(theEmp.getEmpNum(), empCounter, 1);
                        model.setValueAt(theEmp.getFirstName(), empCounter, 2);
                        model.setValueAt(theEmp.getLastName(),empCounter,3);
                        model.setValueAt(theEmp.getGender(), empCounter, 4);
                        model.setValueAt(theEmp.getWorkLoc(), empCounter, 5);
                    }
                    
                    if (theEmp instanceof PTE) {
                        PTE thePTE = (PTE) theEmp;
                        System.out.println("    That employee has hourly wage $" + Double.toString(thePTE.hourlyWage));
                        System.out.println("    That employee's hours worked per week " + Double.toString(thePTE.hoursPerWeek));
                        System.out.println("    That employee's weeks worked per year " + Double.toString(thePTE.weeksPerYear));
                        System.out.println("    That employee has a net yearly income $" + Double.toString(thePTE.calcNetAnnualIncome()));
                        
                        model.setValueAt("Part Time", empCounter, 0);
                        model.setValueAt(theEmp.getEmpNum(), empCounter, 1);
                        model.setValueAt(theEmp.getFirstName(), empCounter, 2);
                        model.setValueAt(theEmp.getLastName(), empCounter, 3);
                        model.setValueAt(theEmp.getGender(), empCounter, 4);
                        model.setValueAt(theEmp.getWorkLoc(), empCounter, 5);
                    }
                }
            }
        }
        else {
            System.out.println("Nothing in the HT!");
        }
        
        System.out.println("\nTABLE ROW COUNT " + contentDispTab.getRowCount());
        System.out.println("\nTABLE COLUMN COUNT " + contentDispTab.getColumnCount());
        
    }//GEN-LAST:event_dispEmpButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable contentDispTab;
    private javax.swing.JButton dispEmpButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}
